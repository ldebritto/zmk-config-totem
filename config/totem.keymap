#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer and key defines to improve readability
#define DEF 0
#define NUM 1 
#define NAV 2 
#define SYM 3
#define FUN 4
#define MOU 5 // also great for one-handed use with a mouse on the right hand

#define HYPR LG(LS(LC(LALT))) // shorthand for HYPER key hold-tap on G and H keys

// These includes allow for easier maintenance and readability between different keymaps
#include "features/totem_keypos.h"                  // Key positions naming scheme for 34 keys keymaps (this is keyboard specific, but makes the rest of the includes keyboard agnostic)

// Features and customizations (these files are shared with Sweep repo)
#include "features/timings.h"                       // Timing definitions for hold-tap and combos
#include "features/core_behaviors_overrides.dtsi"   // Overrides for core behaviors such as &sk, &mt and &lt
#include "features/mouse.dtsi"                      // Requires layer defines above
// #include "features/num_word.dtsi"                   // Settings for &num_word and required remote include

/ {
     combos {
        #include "features/combos.dtsi"              // Very same combos from Sweep
    };

    behaviors {
        #include "features/custom_behaviors.dtsi"    // Very same behaviors from Sweep
    };

    macros {
        #include "features/layer_cancel_macros.dtsi" // Layer change behaviors with and embeded cancel to absorb unused queued mods
        #include "features/typing_macros.dtsi"       // Typing macros for common words and phrases
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer_for_function_and_number_row_keys {
            if-layers = <NAV SYM>;
            then-layer = <FUN>;
        };      
    };

    keymap {
        compatible = "zmk,keymap";
                
        DEF {
            bindings = <
        &kp Q          &kp W        &kp E         &kp R        &kp T         &kp Y         &kp U         &kp I          &kp O         &kp P
        &hrml LCTRL A  &hrml LALT S &hrml LSHFT D &hrml LGUI F &hrml HYPR G  &hrmr HYPR H  &hrmr RGUI J  &hrmr LSHFT K  &hrmr RALT L  &hrmr RCTRL SQT
&none   &hrml GLOBE Z  &kp X        &ltl NUM C    &ltl MOU V   &kp B         &kp N         &kp M         &kp COMMA      &kp DOT       &kp SEMI        &none
                                    &none         &lc NAV      &kp RSHFT     &kp SPACE     &lc SYM       &none
            >;
        };
          
        NUM {
            bindings = <
        &none     &kp LA(LS(N2)) &none  &reais      &kp PRCNT  &kp PLUS    &kp N7  &kp N8  &kp N9  &kp ASTRK
        &sk LCTRL &sk LALT  &sk LSHFT   &sk LGUI    &kp DLLR   &kp MINUS   &kp N4  &kp N5  &kp N6  &kp SLASH
&trans  &none     &none     &none       &none       &none      &kp COMMA   &kp N1  &kp N2  &kp N3  &kp DOT   &trans
                            &trans      &defnav     &sk LGUI   &num_spc    &lt SYM N0  &trans
            >;
        };

        NAV {
            bindings = <
        &kp TAB         &swapper  &kp LS(LC(TAB)) &kp LC(TAB)   &kp LG(RBKT)    &kp PG_UP  &kp HOME &kp UP    &kp END   &kp BSPC
        &sk LCTRL       &sk LALT  &sk LSHFT       &sk LGUI      &kp LG(LBKT)    &kp PG_DN  &kp LEFT &kp DOWN  &kp RIGHT &kp RET
&trans  &mt GLOBE LG(Z) &kp LG(X) &kp LG(C)       &kp LG(V)     &kp F18         &playnp    &kp F19  &vb_dn    &vb_up    &kp DEL &trans
                                  &none           &lc NAV       &kp RSHFT       &kp SPACE  &lc SYM       &none

            >;
        };

        SYM {
            bindings = <
        &kp ESC           &kp LBRC   &kp LBKT   &kp LPAR  &kp PRCNT         &kp AMPS   &kp RPAR  &kp RBKT   &kp RBRC  &kp DQT
        &kp MINUS         &kp CARET  &kp GRAVE  &kp TILDE &kp DOLLAR        &kp HASH   &sk RGUI  &sk LSHFT  &sk RALT  &sk RCTRL
&trans  &mt GLOBE PLUS    &kp EQUAL  &kp ASTRK  &kp FSLH  &kp AT            &kp PIPE   &kp BSLH  &kp QMARK  &kp EXCL  &kp COLON  &trans
                                     &none      &lc NAV   &mt RSHFT UNDER   &kp SPACE  &lc SYM   &none
            >;
        };

        FUN {
            bindings = <
        &kp N1     &kp N2    &kp N3     &kp N4    &kp N5        &kp N6   &kp N7    &kp N8     &kp N9    &kp N0
        &sk LCTRL  &sk LALT  &sk LSHFT  &sk LGUI  &kp F11       &kp F12  &sk RGUI  &sk LSHFT  &sk RALT  &sk RCTRL
&trans  &kp F1     &kp F2    &kp F3     &kp F4    &kp F5        &kp F6   &kp F7    &kp F8     &kp F9    &kp F10   &trans
                             &none      &lc NAV   &kp C_POWER   &kp CAPS &lc SYM   &none
            >;
        };

        MOU {
            bindings = <
        &desktop_quit   &expose_close &kp LC(LS(TAB)) &kp LC(TAB)   &kp LG(RBKT)  &msc SCRL_DOWN  &msc SCRL_RIGHT &mmv MOVE_UP    &msc SCRL_LEFT  &kp BSPC
        &kp LCTRL       &kp LALT      &kp LSHFT       &kp LGUI      &kp LG(LBKT)  &msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT &kp ENTER
&trans  &mt GLOBE LG(Z) &kp LG(X)     &kp LG(C)       &kp LG(V)     &kp F18       &kp LG(LS(N4))  &mkp MCLK       &mkp MB4        &mkp MB5        &kp DEL        &trans
                                      &trans          &defnav       &kp SPACE     &mkp LCLK       &mkp RCLK       &trans     
            >;          
        };        

  };
};